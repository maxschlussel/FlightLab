EKF
Complementary filter fix
quats
Controls
- trim

- Fix simple estimator
- quats
- Dvelop Sensors: pitot tube and altimeter
- EKF
- Aero database
- Better PID
- parse C cmd params properly
    - make config examples/basic_aircraft real functionality
- Better logging
- Dif freq loops
- Earth effects

- Better readme
    - Flightgear gif under intro (like https://github.com/jrsteensen/OpenHornet?tab=readme-ov-file)
    - go thru githubs
    - make better graphs (dark theme)/ gifs
    - make better flightgear gif (with lines of data in bottom right pos vel clock etc)
- Learn form githubs
- Learn from yt
- Port to c++?
- Test: - const rotation
        - slow moment accel
        - still blows up wtih only pure moment
- Create unit tests
- Change make to c
- Process sensors seperatly in EKF for dif refresh rates (seperate matricies)
- Include in EKF forces and moments in F
- Seperate aircraft control vs sim
- Make mat mult (and others) safer so two input pointers to the same place dont corrupt (mat_mult(&A, &B, &A, N))
- Make everthing arrays instead of structs?
- Expand state vector?
- PID control
    - make PID cascaded controls
        - outer loops vs inner loops 
        - apply control theory to make controls
    - Tune PIDs
    - Controls pos vs neg?
    - neg control gain integral opposes correction (roll loop)
    - Fast vs slow sensors/ lopps
    - linearize model
    - calc trim conditions (Trim solver & steady-state analysis)
    - scheduled gains
- Sensors
    - Make sensors (which) w valid delays/ params
    - random seed for sensors
    - sensor sample rates
- Actuators
    - Make actuators real
    - second order or first order?
- Estimate state
    - complementary filter
    - ekf
- guidance
    - basic guidance laws -m guidance commands (loiter, waypoint, path) into references (altitude, speed, heading, attitude)
    - preplanned mission commands
    - pilot input (gui)
- cmake
- Redo sensor random wlak when using seed in montecarlo
- Start each imu ssensor with some sort of bias
- clean aerodynamics function structure to be per aricraft (modular)
- add const to docstrings?
- Better logger/ xdot fully computed in rk4
- add logging to pid vals
- Remove 2 names for log enums and make it so it goes off of emun name alone
- Add time delay to sensors
- solidify units/ var names/ agnostic funcitons
- different run freq loops/ modules
- Get and Set for control vars to clean interface
- quats
- learn about lineara\irty of force functions (isnt F=C * qinf * S always non linear bc of qinf)
- Fix rot matrix
- Better aaerodynamics (database from delta)
- aerodynamics .h no small functions only big ones
- Eurler angle kinematix matrix func
- getInertialVelocity function for eom and gps sensor calcs
- Test X log at end
    - Better logging system
- make sim controls one line - sim runs regardles of if controls are config or not
- Add env (wind, gusts, pressure, density, temp etc)
    - env is input to sensor reading
- Add earth/ gorund forces
- agg ground effect
- unerstand why imu sensor bias random walk is * sqrt(dt)
- Clean up:
    - State Vector.c/h
    - Matrix N x M functions
    - Aircraft sensors/ sensors file / naming struct
    - Sensors 2 array in aircraft sensors


END:
- sign out of github
- git config --system --unset credential.helper
    AS ADMIN
